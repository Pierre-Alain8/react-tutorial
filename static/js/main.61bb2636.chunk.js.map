{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"qQAGMA,EAAc,WAEhB,OACI,+BACI,4BACI,sCACA,uCAMVC,EAAY,SAACC,GAEf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACG,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKf,OAAO,+BAAQJ,IA0BJU,E,iLAfG,IAAD,EACsCC,KAAKZ,MAAxCE,EADH,EACGA,cAAeQ,EADlB,EACkBA,gBAGvB,OACC,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAkBA,S,GAVxDG,a,OCkBLC,E,YAnDb,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KAWRe,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,KAhBO,EAoBnBE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAnBnB,EAAKA,aAAe,CAElBhB,KAAM,GACNC,IAAK,IAGP,EAAKc,MAAQ,EAAKC,aATD,E,sEAyBT,IAAD,EACeX,KAAKU,MAAlBf,EADF,EACEA,KAAMC,EADR,EACQA,IAEb,OACI,8BACI,uCACA,2BACEgB,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUb,KAAKG,eACjB,sCACA,2BACAS,KAAK,OACLjB,KAAK,MACLW,MAAOV,EACPiB,SAAUb,KAAKG,eACf,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GA3C7CP,aCwEJa,E,2MAjCXJ,MAAQ,CAEJK,WAAY,I,EAGhBjB,gBAAkB,SAAAL,GAAU,IAChBsB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAU,CACXQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAMzB,Q,EAOzBgB,aAAe,SAAAQ,GACX,EAAKV,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,wEAGlD,IACCF,EAAef,KAAKU,MAApBK,WAER,OACC,yBAAKI,UAAU,aACV,kBAAC,EAAD,CAAO7B,cAAeyB,EAAYjB,gBAAiBE,KAAKF,kBACxD,kBAAC,EAAD,CAAMW,aAAcT,KAAKS,oB,GA5BnBR,a,MChClBmB,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.61bb2636.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nconst TableHeader = () => {\r\n    //Composant simple utilisant une fonction, ce premier composant simple contiendra la premire scruture du tableau : le header(thead)\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th> Name </th>\r\n                <th>Job </th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    //Composant simple utilisant une fonction, ce premier composant simple contiendra la seconde partie de la scruture du tableau : le body(tbody)\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                   <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return <tbody>{rows}</tbody>\r\n           \r\n    \r\n}\r\n\r\n// les composants simples (fonctions) sont situés dans le même fichier pour pouvoir être utilisé dans le composant class\r\n//Un composant simple n'a besoin que d'un return contrairement aux composants class qui fonctionnent avec un render(){} et un return\r\n\r\nclass Table extends Component {\r\n    //les composant class personnalisés permettent de mieux les différencier des éléments HTML classique\r\n    // Un composant class doit inclure render()et return ne peut renvoyer qu'un seul élément parent\r\n        render() {\r\n            const { characterData, removeCharacter } = this.props\r\n            // récupération des données characterData dans Table via la propriéte props\r\n\r\n            return (\r\n             <table>\r\n                 <TableHeader /> \r\n                 <TableBody characterData={characterData} removeCharacter= {removeCharacter} />\r\n             </table>\r\n                    \r\n            )\r\n        }\r\n    };\r\n    \r\n\r\nexport default Table","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.initialState = {\r\n    // a son etat par defaut, les inputs du formulaire sont vides, ils contiennent aucune données\r\n      name: '',\r\n      job: '',\r\n    }\r\n\r\n    this.state = this.initialState\r\n  }\r\n  \r\n  handleChange = event => {\r\n    const { name, value } = event.target\r\n  \r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state)\r\n    this.setState(this.initialState)\r\n  }\r\n\r\n  render() {\r\n      const {name, job} = this.state; \r\n\r\n      return(\r\n          <form>\r\n              <label>Name</label>\r\n              <input \r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange} />\r\n              <label>Job</label>\r\n              <input \r\n              type=\"text\"\r\n              name=\"job\"\r\n              value={job}\r\n              onChange={this.handleChange} />\r\n              <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n          </form>\r\n\r\n      );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Form","import React, { Component } from 'react'\r\nimport Table from './Table'\r\nimport Form from './Form'\r\n\r\n// class   App extends Component {\r\n//     //création d'un component class contenant un tableau de data au format JSON\r\n    \r\n//    render () {\r\n//     const characters = [\r\n//         {\r\n//          name:'Charlie',\r\n//          job: 'Janitor',\r\n//         }, \r\n         \r\n//         {\r\n//          name:'Mac',\r\n//          job: 'Bouncer',\r\n//         },\r\n         \r\n//         {\r\n//          name: 'Dee',\r\n//          job: 'Aspring actress',\r\n//         },\r\n\r\n//         {\r\n//          name: 'Dennis',\r\n//          job: 'Bartender',\r\n//         },\r\n//     ]\r\n\r\n//     return(  \r\n//         <div className=\"container\">\r\n//             <Table characterData={characters} />\r\n//         {/* la propriété data permet de transmettre des données, celle-ci peut être appelé n'importe où  */}\r\n//         {/* en passant les données dans la variable characters, les data sont maintenant acessible dans le component Table */}\r\n//         </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nclass App extends Component {\r\n    state = {\r\n    // création d'un etat\r\n        characters: [],\r\n    }\r\n\r\n    removeCharacter = index => {\r\n        const { characters } = this.state\r\n\r\n        this.setState( {\r\n            characters: characters.filter((character, i) => {\r\n                return i !== index\r\n            })\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    handleSubmit = character => {\r\n        this.setState({ characters: [...this.state.characters, character] })\r\n    }\r\n\r\n    render(){\r\n      const { characters } = this.state\r\n\r\n      return (\r\n       <div className=\"container\">\r\n            <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n            <Form handleSubmit={this.handleSubmit} />\r\n       </div>\r\n  )\r\n    }\r\n}\r\n\r\nexport default App\r\n//L'export default permet d'exporter ce composant App et de le charger dans le composant index.js\r\n//Séparer les composant permet de rendre l'application moins lourde et simple à prendre en main","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css';\n// Chargement des composants react et de la feuille de style css\n\n\n\nReactDOM.render(<App /> , document.getElementById('root'));\n"],"sourceRoot":""}